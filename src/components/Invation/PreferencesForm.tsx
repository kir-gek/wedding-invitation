import React, { useState } from "react";
import { createZapis } from "../../api";

interface Forminterface {
  nameGuest: string | null;
}

export const PreferencesForm: React.FC<Forminterface> = ({ nameGuest }) => {
  const [foodPreference, setFoodPreference] = useState("");
  const [alcoholPreference, setAlcoholPreference] = useState("");
  const [comment, setComment] = useState("");
  const [isLoading, setIsLoading] = useState(false);
  const [reqDone, setReqDone] = useState(false)

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setIsLoading(true); // –Ω–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É

    try {
      await createZapis(
        nameGuest ? nameGuest : "–ì–æ—Å—Ç—å",
        "–∏–¥—ë—Ç",
        foodPreference,
        alcoholPreference,
        comment
      );
      setReqDone(true)
      alert("–°–ø–∞—Å–∏–±–æ! –í–∞—à–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è —É—á—Ç–µ–Ω—ã üíå");
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ:", error);
      alert("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.");
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <div className="bg-rose-50 rounded-2xl p-8 shadow-xl border border-rose-100 max-w-2xl mx-auto">
      <h2 className="text-center text-3xl font-serif text-rose-800 mb-6">
        –í–∞—à–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è
      </h2>

      <form
        onSubmit={handleSubmit}
        className="space-y-6 text-gray-800  relative z-10"
      >
        {/* –ë–ª–æ–∫: –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –ø–æ –µ–¥–µ */}
        <div>
          <h3 className="text-lg font-semibold mb-3 text-rose-700">
            –ï—Å—Ç—å –ª–∏ —É –≤–∞—Å –æ—Å–æ–±—ã–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –ø–æ –µ–¥–µ?
          </h3>
          <div className="space-y-2 pl-2">
            {[
              "–Ω–µ—Ç",
              "–ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞—é –º—è—Å–æ",
              "–ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞—é —Ä—ã–±—É",
              "–≤–µ–≥–µ—Ç–∞—Ä–∏–∞–Ω–µ—Ü",
            ].map((option) => (
              <label key={option} className="block">
                <input
                  type="radio"
                  name="food"
                  value={option}
                  checked={foodPreference === option}
                  onChange={(e) => setFoodPreference(e.target.value)}
                  className="mr-2 accent-rose-500"
                />
                {option}
              </label>
            ))}
          </div>
        </div>

        {/* –ë–ª–æ–∫: –∞–ª–∫–æ–≥–æ–ª—å */}
        <div>
          <h3 className="text-lg font-semibold mb-3 text-rose-700">
            –ö–∞–∫–æ–π –∞–ª–∫–æ–≥–æ–ª—å –≤—ã –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç–µ?
          </h3>
          <div className="space-y-2 pl-2">
            {[
              "–∫—Ä–∞—Å–Ω–æ–µ –≤–∏–Ω–æ",
              "–±–µ–ª–æ–µ –≤–∏–Ω–æ",
              "—à–∞–º–ø–∞–Ω—Å–∫–æ–µ",
              "–≤–∏—Å–∫–∏",
              "–∫–æ–Ω—å—è–∫",
              "–Ω–µ –±—É–¥—É –ø–∏—Ç—å –∞–ª–∫–æ–≥–æ–ª—å",
            ].map((option) => (
              <label key={option} className="block">
                <input
                  type="radio"
                  name="alcohol"
                  value={option}
                  checked={alcoholPreference === option}
                  onChange={(e) => setAlcoholPreference(e.target.value)}
                  className="mr-2 accent-rose-500"
                />
                {option}
              </label>
            ))}
          </div>
        </div>

        {/* –ë–ª–æ–∫: –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π */}
        <div>
          <label
            htmlFor="comment"
            className="block font-medium text-rose-700 mb-2"
          >
            –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
          </label>
          <textarea
            id="comment"
            rows={4}
            className="w-full border border-rose-200 rounded-lg p-3 text-sm shadow-sm focus:outline-none focus:ring-2 focus:ring-rose-300"
            placeholder="–ù–∞–ø–∏—à–∏—Ç–µ –∑–¥–µ—Å—å, –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ —á—Ç–æ-—Ç–æ –¥–æ–±–∞–≤–∏—Ç—å..."
            value={comment}
            onChange={(e) => setComment(e.target.value)}
          />
        </div>

        {/* –ö–Ω–æ–ø–∫–∞ */}
        <div className="text-center pt-4">
          {!isLoading ? (
            <button
              type="submit"
              className="px-8 py-3 bg-rose-600 hover:bg-rose-700 text-white font-medium rounded-full shadow-lg transform hover:scale-105 transition duration-300"
              disabled={isLoading}
            >
              –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏–µ
            </button>
          ) : (
            // –ü—Ä–æ—Å—Ç–æ–π —Å–ø–∏–Ω–Ω–µ—Ä (–º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –ª—é–±—É—é –∞–Ω–∏–º–∞—Ü–∏—é)
            <div className="inline-block w-8 h-8 border-4 border-rose-600 border-t-transparent rounded-full animate-spin"></div>
          )}
        </div>

        {reqDone && (
  <div className="text-white bg-green-600 text-xl font-bold px-6 py-4 rounded-lg animate-pulse select-none">
    –°–ø–∞—Å–∏–±–æ, –≤–∞—à –æ—Ç–≤–µ—Ç —É—á—Ç—ë–Ω!
  </div>
)}

      </form>
    </div>
  );
};
